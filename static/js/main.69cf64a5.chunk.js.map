{"version":3,"sources":["ListItems.js","App.js","index.js"],"names":["ListItems","props","listItems","items","map","item","index","className","key","style","verticalAlign","float","position","display","Checkbox","checked","size","onChange","e","handleComplete","target","inputProps","type","id","value","text","setUpdate","onClick","deleteItem","icon","duration","easing","library","add","faTrash","App","state","currentItem","visibileItems","checkBoxStatus","addItem","bind","handleInput","preventDefault","newItem","this","setState","Date","now","filteredItems","filter","document","getElementById","focus","i","tabName","temp","push","onSubmit","placeholder","showData","isChecked","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.69cf64a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map((item,index) =>{\r\n       return <div className=\"list\" key={index}>\r\n        <p style={{verticalAlign:\"middle\"}}>\r\n            <span style={{float:\"left\",position:\"relative\",display:\"inline-block\"}}>\r\n                <Checkbox\r\n                    checked={(item.key === 'Completed') ? true : false}\r\n                    size=\"medium\"\r\n                    onChange={(e) => props.handleComplete(e.target.checked,index)}\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />\r\n            </span>\r\n            {/* <input type=\"checkbox\" className=\"check_status\" id=\"check_status\" checked={false} onChange={(e) => props.handleComplete(e.target.checked,index)} /> */}\r\n            <input type=\"text\" id={item.id} value={item.text} onChange={(e)=>{props.setUpdate(e.target.value,item.id)}}/>\r\n            <span>\r\n                <FontAwesomeIcon className=\"faicons\" onClick={() => {props.deleteItem(item.id)}} icon=\"trash\" />\r\n            </span>\r\n        </p>\r\n        </div>\r\n    })\r\n    return <div>\r\n        <FlipMove duration={300} easing=\"ease-in-out\">\r\n            {listItems}\r\n        </FlipMove>\r\n    \r\n    </div>;\r\n  }\r\n\r\n  export default ListItems;","import React from 'react';\r\nimport './App.css';\r\nimport ListItems from './ListItems'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faTrash)\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            currentItem: {\r\n                id:'',\r\n                text: '',\r\n                key: ''\r\n            },\r\n            visibileItems: [],\r\n            checkBoxStatus: false\r\n        }\r\n        this.addItem = this.addItem.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setUpdate = this.setUpdate.bind(this);\r\n        this.handleComplete = this.handleComplete.bind(this);\r\n    }\r\n    addItem(e) {\r\n        e.preventDefault();\r\n        const newItem = this.state.currentItem;\r\n        if (newItem.text !== \"\") {\r\n            const items = [...this.state.items, newItem];\r\n            this.setState({\r\n                items: items,\r\n                currentItem: {\r\n                    id:Date.now(),\r\n                    text: '',\r\n                    key: ''\r\n                },\r\n                visibileItems:items\r\n            })\r\n        }\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({\r\n            currentItem: {\r\n                id:Date.now(),\r\n                text: e.target.value,\r\n                key: 'active'\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteItem(key) {\r\n        const filteredItems= this.state.items.filter((item,index) =>\r\n            item.id!==key);\r\n        this.setState({\r\n            items: filteredItems,\r\n            visibileItems:filteredItems\r\n        })\r\n        document.getElementById('show_all_task').focus();\r\n        // document.getElementsByClassName(\"show_all_task\").focus();\r\n    }\r\n\r\n    handleComplete(key,index) {\r\n        const items = this.state.items;\r\n        items.map((item, i) => {\r\n            if (i === index) {\r\n                (key) ? item.key = \"Completed\" : item.key = \"active\" ;\r\n            }\r\n            return null;\r\n        })\r\n        this.setState({\r\n            items: items,\r\n        })\r\n    }\r\n\r\n    setUpdate(text, key) {\r\n        const items = this.state.items;\r\n        items.map(item => {\r\n            if (item.id === key) {\r\n                item.text = text;\r\n            }\r\n            return null;\r\n        })\r\n        this.setState({\r\n            items: items,\r\n        })\r\n    }\r\n    \r\n    showData(tabName) {\r\n        const items = this.state.items;\r\n        let temp = [];\r\n        switch(tabName) {\r\n            case \"Completed\":\r\n                items.map((item, i) => {\r\n                    if (item.key === 'Completed') {\r\n                        temp.push(item)\r\n                    }\r\n                    return null;\r\n                })\r\n                break;\r\n            case \"active\":\r\n                items.map((item, i) => {\r\n                    if (item.key === 'active') {\r\n                        temp.push(item)\r\n                    }\r\n                    return null;\r\n                })\r\n                break;\r\n            default:\r\n                temp= this.state.items;\r\n        }\r\n        this.setState({\r\n            visibileItems: temp,  \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header>\r\n                    <form id=\"to-do-form\" onSubmit={this.addItem}>\r\n                        <input type=\"text\" placeholder=\"Enter task\" value={this.state.currentItem.text} onChange={this.handleInput}></input>\r\n                        <button type=\"submit\">Add</button>\r\n                    </form>\r\n                    <button id=\"show_all_task\" className=\"show_all_task\" onClick={this.showData.bind(this, \"all\")}>Show All Task</button>\r\n                    <button className=\"show_active_task\" onClick={this.showData.bind(this, \"active\")}>Show Active Task</button>\r\n                    <button className=\"show_completed_task\" onClick={this.showData.bind(this, \"Completed\")}>Show Completed Task</button>\r\n                    <p>{this.state.items.text}</p>\r\n                    <ListItems handleComplete={this.handleComplete} isChecked={this.state.checkBoxStatus} items={this.state.visibileItems} deleteItem={this.deleteItem} setUpdate={this.setUpdate} />\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}